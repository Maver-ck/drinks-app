{"version":3,"sources":["api/index.js","components/ImageCard/index.js","components/CardHeader/index.js","components/Comment/index.js","components/CardComments/styled-card-comments.js","components/CardComments/index.js","components/EventCard/index.js","components/CommentContainer/index.js","components/DrinksHeader/index.js","components/App.jsx","index.js"],"names":["api","axios","create","baseURL","apis","getAllEvents","get","getEventById","id","ImageCard","props","className","src","eventType","substring","length","toLowerCase","alt","StyledDiv","styled","div","StyledTitleDiv","CardHeader","timeCreated","avatar","creator","eventName","location","name","latitude","longitude","href","Comment","comment","user","avatarUrl","message","timestamp","class","moment","fromNow","StyledButton","button","StyledIcon","i","CardComments","useState","showComments","setShowComments","onClick","comments","map","index","EventCard","console","log","CommentContainer","events","event","title","time","type","Header","App","componentDidMount","a","setState","isLoading","then","data","state","this","DrinksHeader","React","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.6b577b24.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://mock-api.drinks.test.siliconrhino.io\",\n});\n\nexport const getAllEvents = () => api.get(`/events`);\nexport const getEventById = (id) => api.get(`/events/${id}`);\n\nconst apis = {\n  getAllEvents,\n  getEventById,\n};\n\nexport default apis;\n","import React from \"react\";\n\nconst ImageCard = (props) => {\n  return (\n    <div className=\"image\">\n      <img\n        src={`/${props.eventType.substring(\n          0,\n          props.eventType.length - 1\n        )}-icon-background.png`.toLowerCase()}\n        alt=\"icon\"\n      />\n    </div>\n  );\n};\n\nexport default ImageCard;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledDiv = styled.div`\n  background-color: #dbb561;\n`;\n\nconst StyledTitleDiv = styled.div`\n  color: #4c3800;\n`;\n\nconst CardHeader = ({\n  timeCreated,\n  avatar,\n  creator,\n  eventName,\n  location: { name, latitude, longitude },\n}) => {\n  return (\n    <StyledDiv className=\"content\">\n      <div className=\"right floated meta\">{timeCreated}</div>\n      <img className=\"ui avatar image\" src={avatar} alt=\"avatar\" />\n      {creator}\n      <StyledTitleDiv className=\"header\">{eventName}</StyledTitleDiv>\n      <div className=\"meta\">\n        <a\n          href={`https://www.google.com/maps/search/?api=1&query=${latitude},${longitude}`}\n        >\n          Location: {name}\n        </a>\n      </div>\n    </StyledDiv>\n  );\n};\n\nexport default CardHeader;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Comment = ({\n  comment: {\n    user: { name, avatarUrl },\n    message,\n    timestamp,\n  },\n}) => {\n  return (\n    <div class=\"comment\">\n      {\" \"}\n      <a class=\"avatar\">\n        <img src={avatarUrl} />\n      </a>\n      <div class=\"content\">\n        <a class=\"author\">{name}</a>\n        <div class=\"metadata\">\n          <div class=\"date\">{moment(timestamp).fromNow()}</div>\n        </div>\n        <div class=\"text\">{message}</div>\n        <div class=\"actions\">\n          <a class=\"reply\">Reply</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Comment;\n","import styled from \"styled-components\";\n\nexport const StyledButton = styled.button`\n  background-color: Transparent;\n  color: #4c3800;\n\n  border: none;\n  &:hover {\n    color: #fff;\n  }\n`;\n\nexport const StyledIcon = styled.i`\n  color: #dbb561;\n  padding-right: 1.5em;\n`;\n","import React, { useState } from \"react\";\nimport Comment from \"../Comment\";\nimport { StyledButton, StyledIcon } from \"./styled-card-comments\";\n\nconst CardComments = (props) => {\n  // declaring state variable showComments which we will use to show or hide comments\n  const [showComments, setShowComments] = useState(false);\n\n  return (\n    <div className=\"content\">\n      {/* will style this button later */}\n      <StyledButton onClick={() => setShowComments(!showComments)}>\n        <StyledIcon className=\"comment icon\"></StyledIcon>\n        {props.comments.length} comments\n      </StyledButton>\n      {showComments && (\n        <div className=\"ui comments\">\n          {props.comments.map((comment, index) => {\n            return <Comment comment={comment} />;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CardComments;\n","import React from \"react\";\nimport ImageCard from \"../ImageCard\";\nimport CardHeader from \"../CardHeader\";\nimport CardComments from \"../CardComments\";\nimport \"./index.css\";\n\nconst EventCard = (props) => {\n  console.log(`/${props.eventType}-icon.png`.toLowerCase());\n  return (\n    <div className=\"card\">\n      <CardHeader\n        timeCreated={props.timeCreated}\n        avatar={props.avatar}\n        eventName={props.eventName}\n        location={props.location}\n      />\n      <ImageCard eventType={props.eventType}></ImageCard>\n      <CardComments comments={props.comments} />\n    </div>\n  );\n};\n\nexport default EventCard;\n","import React from \"react\";\nimport moment from \"moment\";\nimport EventCard from \"../EventCard\";\n\nconst CommentContainer = ({ events }) => {\n  return (\n    <div className=\"ui container comments\">\n      <div className=\"ui cards\">\n        {events.map((event, index) => {\n          return (\n            <EventCard\n              eventName={event.title}\n              creator={event.creator.name}\n              timeCreated={moment(event.time).fromNow()}\n              avatar={event.creator.avatarUrl}\n              eventType={event.type}\n              comments={event.comments}\n              location={event.location}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default CommentContainer;\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <h2 className=\"ui header\">\n      <img className=\"ui image\" src=\"/drinks-text.png\" alt=\"header-logo\" />\n    </h2>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport api from \"../api\";\nimport CommentContainer from \"./CommentContainer\";\nimport DrinksHeader from \"./DrinksHeader\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: [],\n      isLoading: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    this.setState({ isLoading: true });\n    await api.getAllEvents().then((event) => {\n      console.log(event.data);\n      this.setState({\n        events: event.data,\n        isLoading: false,\n      });\n    });\n  };\n\n  render() {\n    const { events, isLoading } = this.state;\n    console.log(events);\n    return (\n      <>\n        <DrinksHeader />\n        <CommentContainer events={events} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}